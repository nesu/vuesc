m4_init()
m4_define([b4_mergers], 
[[]])

m4_define([b4_symbol_numbers],
[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33]])

m4_define([b4_type_names],
[[0, 1, 2, 18, 19],
[20, 21, 23],
[29, 31, 32],
[33],
[30],
[3],
[22, 24, 25, 26, 27],
[4, 5],
[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
[28]])

m4_define([b4_actions], 
[b4_case(2, [b4_syncline(64, [["Parser.y"]])
[    { root_block = new Block(); }]])

b4_case(3, [b4_syncline(65, [["Parser.y"]])
[    { root_block = ]b4_rhs_value(1, 1, 21, [])[; }]])

b4_case(4, [b4_syncline(70, [["Parser.y"]])
[    { ]b4_lhs_value(21, [])[ = new Block(); ]b4_lhs_value(21, [])[->statements.push_back(]b4_rhs_value(1, 1, 22, [[statement]])[); }]])

b4_case(5, [b4_syncline(71, [["Parser.y"]])
[    { ]b4_rhs_value(2, 1, 21, [])[->statements.push_back(]b4_rhs_value(2, 2, 22, [[statement]])[); }]])

b4_case(6, [b4_syncline(76, [["Parser.y"]])
[    { ]b4_lhs_value(22, [])[ = ]b4_rhs_value(1, 1, 24, [])[; }]])

b4_case(7, [b4_syncline(77, [["Parser.y"]])
[    { ]b4_lhs_value(22, [])[ = ]b4_rhs_value(1, 1, 25, [])[; }]])

b4_case(8, [b4_syncline(78, [["Parser.y"]])
[    { ]b4_lhs_value(22, [])[ = ]b4_rhs_value(1, 1, 27, [])[; }]])

b4_case(9, [b4_syncline(79, [["Parser.y"]])
[    { ]b4_lhs_value(22, [])[ = ]b4_rhs_value(1, 1, 26, [])[; }]])

b4_case(10, [b4_syncline(80, [["Parser.y"]])
[    { ]b4_lhs_value(22, [])[ = new ExpressionStatement(*]b4_rhs_value(1, 1, 30, [])[); }]])

b4_case(11, [b4_syncline(81, [["Parser.y"]])
[    { ]b4_lhs_value(22, [])[ = new ReturnStatement(*]b4_rhs_value(2, 2, 30, [])[); }]])

b4_case(12, [b4_syncline(86, [["Parser.y"]])
[    { ]b4_lhs_value(23, [])[ = ]b4_rhs_value(3, 2, 21, [])[; }]])

b4_case(13, [b4_syncline(87, [["Parser.y"]])
[    { ]b4_lhs_value(23, [])[ = new Block(); }]])

b4_case(14, [b4_syncline(92, [["Parser.y"]])
[    { ]b4_lhs_value(24, [])[ = new VariableDeclaration(*]b4_rhs_value(4, 2, 31, [])[, *]b4_rhs_value(4, 4, 31, [])[); }]])

b4_case(15, [b4_syncline(93, [["Parser.y"]])
[    { ]b4_lhs_value(24, [])[ = new VariableDeclaration(*]b4_rhs_value(6, 2, 31, [])[, *]b4_rhs_value(6, 4, 31, [])[, ]b4_rhs_value(6, 6, 30, [])[); }]])

b4_case(16, [b4_syncline(97, [["Parser.y"]])
[    { ]b4_lhs_value(25, [])[ = new VariableDeclaration(*]b4_rhs_value(6, 2, 31, [])[, *]b4_rhs_value(6, 4, 31, [])[, ]b4_rhs_value(6, 6, 30, [])[); }]])

b4_case(17, [b4_syncline(102, [["Parser.y"]])
[    { ]b4_lhs_value(26, [])[ = new VariableDeclaration(*]b4_rhs_value(3, 1, 31, [])[, *]b4_rhs_value(3, 3, 31, [])[); }]])

b4_case(18, [b4_syncline(103, [["Parser.y"]])
[    { ]b4_lhs_value(26, [])[ = new VariableDeclaration(*]b4_rhs_value(5, 1, 31, [])[, *]b4_rhs_value(5, 3, 31, [])[, ]b4_rhs_value(5, 5, 30, [])[); }]])

b4_case(19, [b4_syncline(108, [["Parser.y"]])
[    { ]b4_lhs_value(27, [])[ = new MethodDeclaration(*]b4_rhs_value(6, 2, 31, [])[, *]b4_rhs_value(6, 4, 28, [])[, *]b4_rhs_value(6, 6, 23, [])[); }]])

b4_case(20, [b4_syncline(109, [["Parser.y"]])
[    { ]b4_lhs_value(27, [])[ = new MethodDeclaration(*]b4_rhs_value(8, 2, 31, [])[, *]b4_rhs_value(8, 4, 28, [])[, *]b4_rhs_value(8, 7, 31, [])[, *]b4_rhs_value(8, 8, 23, [])[); }]])

b4_case(21, [b4_syncline(113, [["Parser.y"]])
[    { ]b4_lhs_value(28, [])[ = new std::vector<VariableDeclaration*>(); }]])

b4_case(22, [b4_syncline(114, [["Parser.y"]])
[    { ]b4_lhs_value(28, [])[ = new std::vector<VariableDeclaration*>(); ]b4_lhs_value(28, [])[->push_back(]b4_rhs_value(1, 1, 26, [[method_arg_decl]])[); }]])

b4_case(23, [b4_syncline(115, [["Parser.y"]])
[    { ]b4_rhs_value(3, 1, 28, [])[->push_back(]b4_rhs_value(3, 3, 26, [[method_arg_decl]])[); }]])

b4_case(24, [b4_syncline(123, [["Parser.y"]])
[    { ]b4_lhs_value(30, [])[ = new Assignment(*]b4_rhs_value(3, 1, 31, [[identifier]])[, *]b4_rhs_value(3, 3, 30, [])[); }]])

b4_case(25, [b4_syncline(124, [["Parser.y"]])
[    { ]b4_lhs_value(30, [])[ = new MethodCall(*]b4_rhs_value(4, 1, 31, [])[, *]b4_rhs_value(4, 3, 34, [])[); delete ]b4_rhs_value(4, 3, 34, [])[; }]])

b4_case(26, [b4_syncline(125, [["Parser.y"]])
[    { ]b4_lhs_value(30, [[identifier]])[ = ]b4_rhs_value(1, 1, 31, [])[; }]])

b4_case(27, [b4_syncline(126, [["Parser.y"]])
[    { ]b4_lhs_value(30, [])[ = ]b4_rhs_value(1, 1, 32, [])[; }]])

b4_case(28, [b4_syncline(127, [["Parser.y"]])
[    { ]b4_lhs_value(30, [])[ = ]b4_rhs_value(1, 1, 33, [])[; }]])

b4_case(29, [b4_syncline(132, [["Parser.y"]])
[    { ]b4_lhs_value(31, [])[ = new Identifier(*]b4_rhs_value(1, 1, 5, [])[); delete ]b4_rhs_value(1, 1, 5, [])[; }]])

b4_case(30, [b4_syncline(137, [["Parser.y"]])
[    { ]b4_lhs_value(32, [])[ = new Integer(]b4_rhs_value(1, 1, 3, [])[); }]])

b4_case(31, [b4_syncline(142, [["Parser.y"]])
[    { ]b4_lhs_value(33, [])[ = new String(*]b4_rhs_value(1, 1, 4, [])[); delete ]b4_rhs_value(1, 1, 4, [])[; }]])

b4_case(32, [b4_syncline(147, [["Parser.y"]])
[    { ]b4_lhs_value(34, [])[ = new std::vector<Expression*>(); }]])

b4_case(33, [b4_syncline(148, [["Parser.y"]])
[    { ]b4_lhs_value(34, [])[ = new std::vector<Expression*>(); ]b4_lhs_value(34, [])[->push_back(]b4_rhs_value(1, 1, 30, [])[); }]])

b4_case(34, [b4_syncline(149, [["Parser.y"]])
[    { ]b4_rhs_value(3, 1, 34, [])[->push_back(]b4_rhs_value(3, 3, 30, [])[); }]])

])

m4_define([b4_percent_code_user_qualifiers],
[[[[[[requires]], [[Parser.y:8.7]], [[Parser.y:8.15]]]]]])


m4_define([b4_symbol(27, type)],
[[statement]])


m4_define([b4_symbol(25, id)],
[[val_decl]])


m4_define([b4_symbol(16, type)],
[[token]])


m4_define([b4_symbol(6, type)],
[[token]])


m4_define([b4_skeletonsdir],
[[D:\vuesc\winflexbison\data/skeletons]])


m4_define([b4_translate],
[[     0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18]])


m4_define([b4_percent_define_loc(api.parser.class)],
[[[[Parser.y:5.1]], [[Parser.y:5.36]]]])


m4_define([b4_symbol(3, is_token)],
[[1]])


m4_define([b4_use_push_for_pull_flag],
[[0]])


m4_define([b4_symbol(12, is_token)],
[[1]])


m4_define([b4_symbol(22, is_token)],
[[0]])


m4_define([b4_symbol(4, has_type)],
[[1]])


m4_define([b4_symbol(32, is_token)],
[[0]])


m4_define([b4_symbol(8, has_printer)],
[[0]])


m4_define([b4_pact_ninf],
[[-27]])


m4_define([b4_symbol(17, has_printer)],
[[0]])


m4_define([b4_symbol(13, has_type)],
[[1]])


m4_define([b4_symbol(23, has_type)],
[[1]])


m4_define([b4_symbol(27, has_printer)],
[[0]])


m4_define([b4_symbol(33, has_type)],
[[1]])


m4_define([b4_conflict_list_heads],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0]])


m4_define([b4_symbol(0, tag)],
[[$][end]])


m4_define([b4_symbol(1, tag)],
[[error]])


m4_define([b4_symbol(4, user_number)],
[[259]])


m4_define([b4_symbol(2, tag)],
[[$][undefined]])


m4_define([b4_symbol(13, user_number)],
[[268]])


m4_define([b4_symbol(3, tag)],
[[TINTEGER]])


m4_define([b4_symbol(23, user_number)],
[[-1]])


m4_define([b4_symbol(20, number)],
[[20]])


m4_define([b4_percent_define_how(parse.trace)],
[[0]])


m4_define([b4_symbol(33, user_number)],
[[-1]])


m4_define([b4_symbol(21, number)],
[[21]])


m4_define([b4_symbol(4, tag)],
[[TSTRING]])


m4_define([b4_symbol(5, tag)],
[[TIDENTIFIER]])


m4_define([b4_symbol(22, number)],
[[22]])


m4_define([b4_toknum_max],
[[273]])


m4_define([b4_symbol(23, number)],
[[23]])


m4_define([b4_symbol(6, tag)],
[[TFUN]])


m4_define([b4_rhs],
[[    20,     0,    -1,    -1,    21,    -1,    22,    -1,    21,    22,
      -1,    24,    -1,    25,    -1,    27,    -1,    26,    -1,    29,
      -1,     9,    29,    -1,    12,    21,    13,    -1,    12,    13,
      -1,     7,    30,    16,    30,    -1,     7,    30,    16,    30,
      18,    29,    -1,     8,    30,    16,    30,    18,    29,    -1,
      30,    16,    30,    -1,    30,    16,    30,    18,    29,    -1,
       6,    30,    10,    28,    11,    23,    -1,     6,    30,    10,
      28,    11,    16,    30,    23,    -1,    -1,    26,    -1,    28,
      14,    26,    -1,    30,    18,    29,    -1,    30,    10,    33,
      11,    -1,    30,    -1,    31,    -1,    32,    -1,     5,    -1,
       3,    -1,     4,    -1,    -1,    29,    -1,    33,    14,    29,
      -1]])


m4_define([b4_last],
[[75]])


m4_define([b4_symbol(24, number)],
[[24]])


m4_define([b4_symbol(7, tag)],
[[TVAR]])


m4_define([b4_symbol(8, tag)],
[[TVAL]])


m4_define([b4_symbol(25, number)],
[[25]])


m4_define([b4_stos_min],
[[0]])


m4_define([b4_symbol(26, number)],
[[26]])


m4_define([b4_symbol(9, tag)],
[[TRETURN]])


m4_define([b4_symbol(27, number)],
[[27]])


m4_define([b4_tag_seen_flag],
[[1]])


m4_define([b4_percent_define(parse.trace)],
[[]])


m4_define([b4_token_table_flag],
[[0]])


m4_define([b4_symbol(28, number)],
[[28]])


m4_define([b4_symbol(29, number)],
[[29]])


m4_define([b4_parser_file_name],
[[Parser.cc]])


m4_define([b4_percent_define_bison_variables(lr.default-reduction)],
[[]])


m4_define([b4_symbol(5, has_destructor)],
[[0]])


m4_define([b4_symbol(5, id)],
[[TIDENTIFIER]])


m4_define([b4_symbol(14, has_destructor)],
[[0]])


m4_define([b4_symbol(14, id)],
[[TCOMMA]])


m4_define([b4_symbol(28, type)],
[[variable_vector]])


m4_define([b4_symbol(24, has_destructor)],
[[0]])


m4_define([b4_immediate],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0]])


m4_define([b4_symbol(24, id)],
[[var_decl]])


m4_define([b4_symbol(17, type)],
[[token]])


m4_define([b4_percent_code()],
[[]b4_syncline(23, [["Parser.y"]])[

    static int yylex(Vues::Parser::semantic_type *yylval, Lexer &lexer);
]])


m4_define([b4_symbol(7, type)],
[[token]])


m4_define([b4_table_min],
[[0]])


m4_define([b4_table],
[[    16,    25,    22,    36,    19,    20,    21,     3,    29,    16,
       1,     2,     3,     4,     5,     6,     7,    24,    26,    53,
      56,    32,    30,    35,    27,    26,    28,    34,    50,    38,
      39,    40,    51,    28,    31,    27,    41,    48,    49,    42,
      44,    54,    55,    45,    43,    38,     1,     2,     3,    25,
      16,    58,    46,    47,    50,    57,     0,    16,     1,     2,
       3,     4,     5,     6,     7,     0,     0,    60,    59,     1,
       2,     3,     4,     5,     6,     7]])


m4_define([b4_conflicting_rules_max],
[[0]])


m4_define([b4_merger],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0]])


m4_define([b4_glr_flag],
[[0]])


m4_define([b4_symbol(2, is_token)],
[[0]])


m4_define([b4_symbol(11, is_token)],
[[1]])


m4_define([b4_check_max],
[[58]])


m4_define([b4_symbol(21, is_token)],
[[0]])


m4_define([b4_symbol(3, has_type)],
[[1]])


m4_define([b4_symbol(31, is_token)],
[[0]])


m4_define([b4_symbol(7, has_printer)],
[[0]])


m4_define([b4_symbol(12, has_type)],
[[1]])


m4_define([b4_symbol(16, has_printer)],
[[0]])


m4_define([b4_symbol(22, has_type)],
[[1]])


m4_define([b4_symbol(26, has_printer)],
[[0]])


m4_define([b4_symbol(32, has_type)],
[[1]])


m4_define([b4_spec_graph_file],
[[parser]])


m4_define([b4_symbol(10, tag)],
[[TLPAREN]])


m4_define([b4_symbol(3, user_number)],
[[258]])


m4_define([b4_symbol(11, tag)],
[[TRPAREN]])


m4_define([b4_rline_min],
[[0]])


m4_define([b4_symbol(30, number)],
[[30]])


m4_define([b4_symbol(12, user_number)],
[[267]])


m4_define([b4_symbol(12, tag)],
[[TLBRACE]])


m4_define([b4_symbol(13, tag)],
[[TRBRACE]])


m4_define([b4_symbol(31, number)],
[[31]])


m4_define([b4_symbol(22, user_number)],
[[-1]])


m4_define([b4_percent_define_syncline(api.parser.class)],
[[]b4_syncline(5, [["Parser.y"]])[]])


m4_define([b4_symbol(32, number)],
[[32]])


m4_define([b4_symbol(32, user_number)],
[[-1]])


m4_define([b4_symbol(14, tag)],
[[TCOMMA]])


m4_define([b4_toknum],
[[     0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273]])


m4_define([b4_symbol(15, tag)],
[[TDOT]])


m4_define([b4_symbol(33, number)],
[[33]])


m4_define([b4_symbol(16, tag)],
[[TCOLON]])


m4_define([b4_symbol(17, tag)],
[[TQUOTE]])


m4_define([b4_defgoto_max],
[[52]])


m4_define([b4_symbol(18, tag)],
[[TASSIGN]])


m4_define([b4_symbol(19, tag)],
[[$][accept]])


m4_define([b4_symbol(4, has_destructor)],
[[0]])


m4_define([b4_symbol(4, id)],
[[TSTRING]])


m4_define([b4_symbol(29, type)],
[[expression]])


m4_define([b4_symbol(13, has_destructor)],
[[0]])


m4_define([b4_symbol(13, id)],
[[TRBRACE]])


m4_define([b4_symbol(23, has_destructor)],
[[0]])


m4_define([b4_symbol(18, type)],
[[]])


m4_define([b4_version],
[[3.3.1]])


m4_define([b4_symbol(33, has_destructor)],
[[0]])


m4_define([b4_symbol(23, id)],
[[block]])


m4_define([b4_symbol(8, type)],
[[token]])


m4_define([b4_immediate_max],
[[0]])


m4_define([b4_translate_min],
[[0]])


m4_define([b4_symbol(33, id)],
[[call_args]])


m4_define([b4_percent_define_loc(parse.trace)],
[[[[<command line>:3.-1]], [[<command line>:3.-1]]]])


m4_define([b4_symbol(1, is_token)],
[[0]])


m4_define([b4_symbol(10, is_token)],
[[1]])


m4_define([b4_percent_define(lr.default-reduction)],
[[most]])


m4_define([b4_symbol(20, is_token)],
[[0]])


m4_define([b4_symbol(2, has_type)],
[[0]])


m4_define([b4_symbol(30, is_token)],
[[0]])


m4_define([b4_symbol(6, has_printer)],
[[0]])


m4_define([b4_symbol(11, has_type)],
[[1]])


m4_define([b4_symbol(15, has_printer)],
[[0]])


m4_define([b4_symbol(21, has_type)],
[[1]])


m4_define([b4_symbol(25, has_printer)],
[[0]])


m4_define([b4_symbol(31, has_type)],
[[1]])


m4_define([b4_symbol(20, tag)],
[[program]])


m4_define([b4_symbol(21, tag)],
[[statements]])


m4_define([b4_symbol(2, user_number)],
[[257]])


m4_define([b4_symbol(22, tag)],
[[statement]])


m4_define([b4_symbol(11, user_number)],
[[266]])


m4_define([b4_symbol(30, type)],
[[identifier]])


m4_define([b4_symbol(23, tag)],
[[block]])


m4_define([b4_pgoto_min],
[[-27]])


m4_define([b4_symbol(24, tag)],
[[var_decl]])


m4_define([b4_symbol(21, user_number)],
[[-1]])


m4_define([b4_symbol(25, tag)],
[[val_decl]])


m4_define([b4_symbol(31, user_number)],
[[-1]])


m4_define([b4_rhs_max],
[[33]])


m4_define([b4_symbol(26, tag)],
[[method_arg_decl]])


m4_define([b4_symbol(27, tag)],
[[method_decl]])


m4_define([b4_symbol(28, tag)],
[[method_decl_args]])


m4_define([b4_skeleton],
[["lalr1.cc"]])


m4_define([b4_symbol(29, tag)],
[[expression]])


m4_define([b4_percent_define_kind(lr.type)],
[[keyword]])


m4_define([b4_pgoto],
[[   -27,   -27,     5,    -8,     9,   -27,   -27,   -26,   -27,   -27,
      -5,     0,   -27,   -27,   -27]])


m4_define([b4_pact_max],
[[66]])


m4_define([b4_yacc_flag],
[[0]])


m4_define([b4_percent_define_kind(parse.trace)],
[[keyword]])


m4_define([b4_spec_verbose_file],
[[Parser.output]])


m4_define([b4_percent_define(api.namespace)],
[[ Vues ]])


m4_define([b4_symbol(3, has_destructor)],
[[0]])


m4_define([b4_symbol(3, id)],
[[TINTEGER]])


m4_define([b4_symbol(19, type)],
[[]])


m4_define([b4_symbol(12, has_destructor)],
[[0]])


m4_define([b4_symbol(9, type)],
[[token]])


m4_define([b4_symbol(22, has_destructor)],
[[0]])


m4_define([b4_symbol(12, id)],
[[TLBRACE]])


m4_define([b4_symbol(22, id)],
[[statement]])


m4_define([b4_symbol(32, has_destructor)],
[[0]])


m4_define([b4_symbol(32, id)],
[[string_literal]])


m4_define([b4_symbol(0, is_token)],
[[1]])


m4_define([b4_percent_define_kind(lr.keep-unreachable-state)],
[[keyword]])


m4_define([b4_symbol(1, has_type)],
[[0]])


m4_define([b4_symbol(5, has_printer)],
[[0]])


m4_define([b4_conflict_list_heads_min],
[[0]])


m4_define([b4_symbol(14, has_printer)],
[[0]])


m4_define([b4_symbol(10, has_type)],
[[1]])


m4_define([b4_symbol(20, has_type)],
[[1]])


m4_define([b4_symbol(24, has_printer)],
[[0]])


m4_define([b4_symbol(30, has_type)],
[[1]])


m4_define([b4_tname],
[["$][end", "error", "$][undefined", "TINTEGER", "TSTRING", "TIDENTIFIER",
  "TFUN", "TVAR", "TVAL", "TRETURN", "TLPAREN", "TRPAREN", "TLBRACE",
  "TRBRACE", "TCOMMA", "TDOT", "TCOLON", "TQUOTE", "TASSIGN", "$][accept",
  "program", "statements", "statement", "block", "var_decl", "val_decl",
  "method_arg_decl", "method_decl", "method_decl_args", "expression",
  "identifier", "numeric", "string_literal", "call_args", ]b4_null[]])


m4_define([b4_symbol(30, tag)],
[[identifier]])


m4_define([b4_percent_define_loc(lr.default-reduction)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(31, tag)],
[[numeric]])


m4_define([b4_symbol(32, tag)],
[[string_literal]])


m4_define([b4_symbol(1, user_number)],
[[256]])


m4_define([b4_symbol(33, tag)],
[[call_args]])


m4_define([b4_symbol(31, type)],
[[expression]])


m4_define([b4_defact],
[[     2,    30,    31,    29,     0,     0,     0,     0,     0,     3,
       4,     6,     7,     9,     8,    10,    26,    27,    28,     0,
       0,     0,    11,    26,     1,     5,    32,     0,     0,    21,
       0,     0,    33,     0,    17,    24,    22,     0,     0,    14,
       0,    25,     0,     0,     0,     0,     0,     0,    34,    18,
       0,     0,    19,    23,    15,    16,    13,     0,     0,    12,
      20]])


m4_define([b4_symbol(20, type)],
[[block]])


m4_define([b4_symbol(19, is_token)],
[[0]])


m4_define([b4_symbol(10, user_number)],
[[265]])


m4_define([b4_symbol(20, user_number)],
[[-1]])


m4_define([b4_symbol(29, is_token)],
[[0]])


m4_define([b4_tokens_number],
[[19]])


m4_define([b4_symbol(30, user_number)],
[[-1]])


m4_define([b4_stos_max],
[[33]])


m4_define([b4_percent_define_user_variables],
[[[[[[parse.trace]], [[<command line>:3.-1]], [[<command line>:3.-1]]]],[[[[api.parser.class]], [[Parser.y:5.1]], [[Parser.y:5.36]]]],[[[[api.namespace]], [[Parser.y:6.1]], [[Parser.y:6.31]]]]]])


m4_define([b4_lex_param],
[[[[[Lexer &lexer]], [[lexer]]]]])


m4_define([b4_symbol(2, has_destructor)],
[[0]])


m4_define([b4_merger_min],
[[0]])


m4_define([b4_symbol(11, has_destructor)],
[[0]])


m4_define([b4_symbol(2, id)],
[[]])


m4_define([b4_table_max],
[[60]])


m4_define([b4_symbol(11, id)],
[[TRPAREN]])


m4_define([b4_symbol(21, has_destructor)],
[[0]])


m4_define([b4_symbol(21, id)],
[[statements]])


m4_define([b4_spec_name_prefix],
[[]])


m4_define([b4_symbol(31, has_destructor)],
[[0]])


m4_define([b4_symbol(31, id)],
[[numeric]])


m4_define([b4_epilogue],
[[]b4_syncline(153, [["Parser.y"]])[


#include "Lexer.h"

static int yylex(Vues::Parser::semantic_type *yylval, Lexer &lexer)
{
    return lexer.yylex(yylval);
}

void Vues::Parser::error(const std::string &err)
{
    std::cerr << "Error: " << err << std::endl;
}
]])


m4_define([b4_table_ninf],
[[-1]])


m4_define([b4_prhs],
[[     0,     0,     3,     4,     6,     8,    11,    13,    15,    17,
      19,    21,    24,    28,    31,    36,    43,    50,    54,    60,
      67,    76,    77,    79,    83,    87,    92,    94,    96,    98,
     100,   102,   104,   105,   107]])


m4_define([b4_percent_define_kind(lr.default-reduction)],
[[keyword]])


m4_define([b4_symbol(4, has_printer)],
[[0]])


m4_define([b4_symbol(0, has_type)],
[[0]])


m4_define([b4_check],
[[     0,     9,     7,    29,     4,     5,     6,     5,    10,     9,
       3,     4,     5,     6,     7,     8,     9,     0,    10,    45,
      13,    26,    16,    28,    16,    10,    18,    27,    12,    29,
      30,    31,    16,    18,    16,    16,    11,    42,    43,    14,
      11,    46,    47,    14,    18,    45,     3,     4,     5,    57,
      50,    51,    18,    18,    12,    50,    -1,    57,     3,     4,
       5,     6,     7,     8,     9,    -1,    -1,    58,    13,     3,
       4,     5,     6,     7,     8,     9]])


m4_define([b4_symbol(13, has_printer)],
[[0]])


m4_define([b4_symbol(23, has_printer)],
[[0]])


m4_define([b4_nterms_number],
[[15]])


m4_define([b4_symbol(33, has_printer)],
[[0]])


m4_define([b4_rline_max],
[[149]])


m4_define([b4_symbol(32, type)],
[[expression]])


m4_define([b4_symbol(0, user_number)],
[[0]])


m4_define([b4_symbol(21, type)],
[[block]])


m4_define([b4_symbol(9, is_token)],
[[1]])


m4_define([b4_dprec],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0]])


m4_define([b4_symbol(18, is_token)],
[[1]])


m4_define([b4_symbol(10, type)],
[[token]])


m4_define([b4_symbol(0, type)],
[[]])


m4_define([b4_symbol(28, is_token)],
[[0]])


m4_define([b4_symbol(19, has_type)],
[[0]])


m4_define([b4_symbol(29, has_type)],
[[1]])


m4_define([b4_rline],
[[     0,    64,    64,    65,    70,    71,    76,    77,    78,    79,
      80,    81,    86,    87,    92,    93,    97,   102,   103,   108,
     109,   113,   114,   115,   123,   124,   125,   126,   127,   132,
     137,   142,   147,   148,   149]])


m4_define([b4_percent_define_how(api.parser.class)],
[[2]])


m4_define([b4_prhs_min],
[[0]])


m4_define([b4_spec_outfile],
[[Parser.cc]])


m4_define([b4_symbol(1, has_destructor)],
[[0]])


m4_define([b4_symbol(19, user_number)],
[[-1]])


m4_define([b4_translate_max],
[[18]])


m4_define([b4_symbol(29, user_number)],
[[-1]])


m4_define([b4_symbol(10, has_destructor)],
[[0]])


m4_define([b4_symbol(1, id)],
[[error]])


m4_define([b4_union_members],
[[]b4_syncline(27, [["Parser.y"]])[

    int token;
    long long integer;
    std::string* string;

    Node* node;
    Block* block;
    Expression* expression;
    Statement* statement;
    Identifier* identifier;
    VariableDeclaration* var_decl;
    /* Method arguments receive different format of variable declarations. */ 
    VariableDeclaration* method_arg_decl;
    std::vector<Expression*> *expression_vector;
    std::vector<VariableDeclaration*> *variable_vector;
]])


m4_define([b4_symbol(20, has_destructor)],
[[0]])


m4_define([b4_symbol(10, id)],
[[TLPAREN]])


m4_define([b4_user_token_number_max],
[[273]])


m4_define([b4_symbol(30, has_destructor)],
[[0]])


m4_define([b4_symbol(20, id)],
[[program]])


m4_define([b4_r1_min],
[[0]])


m4_define([b4_symbol(30, id)],
[[identifier]])


m4_define([b4_max_left_semantic_context],
[[0]])


m4_define([b4_percent_define_kind(api.parser.class)],
[[code]])


m4_define([b4_percent_define_loc(api.namespace)],
[[[[Parser.y:6.1]], [[Parser.y:6.31]]]])


m4_define([b4_symbol(3, has_printer)],
[[0]])


m4_define([b4_symbol(12, has_printer)],
[[0]])


m4_define([b4_symbol(22, has_printer)],
[[0]])


m4_define([b4_symbol(32, has_printer)],
[[0]])


m4_define([b4_symbol(33, type)],
[[expression_vector]])


m4_define([b4_pgoto_max],
[[9]])


m4_define([b4_symbol(22, type)],
[[statement]])


m4_define([b4_symbol(8, is_token)],
[[1]])


m4_define([b4_symbol(11, type)],
[[token]])


m4_define([b4_rules_number],
[[34]])


m4_define([b4_symbol(17, is_token)],
[[1]])


m4_define([b4_symbol(1, type)],
[[]])


m4_define([b4_symbol(27, is_token)],
[[0]])


m4_define([b4_symbol(9, has_type)],
[[1]])


m4_define([b4_file_name_all_but_ext],
[[Parser]])


m4_define([b4_symbol(18, has_type)],
[[0]])


m4_define([b4_percent_code(requires)],
[[]b4_syncline(8, [["Parser.y"]])[

    #include "AbstractSyntaxTree.h"
    class Lexer;
]])


m4_define([b4_symbol(28, has_type)],
[[1]])


m4_define([b4_percent_define(lr.type)],
[[lalr]])


m4_define([b4_symbol(9, user_number)],
[[264]])


m4_define([b4_symbol(0, has_destructor)],
[[0]])


m4_define([b4_symbol(18, user_number)],
[[273]])


m4_define([b4_symbol(0, id)],
[[]])


m4_define([b4_symbol(28, user_number)],
[[-1]])


m4_define([b4_r2_min],
[[0]])


m4_define([b4_pact],
[[    66,   -27,   -27,   -27,     2,     2,     2,    43,    17,    66,
     -27,   -27,   -27,   -27,   -27,   -27,     8,   -27,   -27,    -2,
       6,    18,   -27,    15,   -27,   -27,    43,     2,    43,     2,
       2,     2,   -27,    25,    26,   -27,   -27,    29,    19,    34,
      35,   -27,    43,    43,    16,     2,    43,    43,   -27,   -27,
       7,     2,   -27,   -27,   -27,   -27,   -27,    55,    42,   -27,
     -27]])


m4_define([b4_dprec_min],
[[0]])


m4_define([b4_defact_min],
[[0]])


m4_define([b4_percent_define(lr.keep-unreachable-state)],
[[false]])


m4_define([b4_synclines_flag],
[[1]])


m4_define([b4_nondeterministic_flag],
[[0]])


m4_define([b4_defines_flag],
[[1]])


m4_define([b4_percent_define_syncline(parse.trace)],
[[]b4_syncline(3, [["<command line>"]])[]])


m4_define([b4_conflict_list_heads_max],
[[0]])


m4_define([b4_dir_prefix],
[[]])


m4_define([b4_symbol(2, has_printer)],
[[0]])


m4_define([b4_symbol(19, has_destructor)],
[[0]])


m4_define([b4_symbol(11, has_printer)],
[[0]])


m4_define([b4_symbol(29, has_destructor)],
[[0]])


m4_define([b4_symbol(19, id)],
[[]])


m4_define([b4_symbol(21, has_printer)],
[[0]])


m4_define([b4_symbol(29, id)],
[[expression]])


m4_define([b4_symbol(31, has_printer)],
[[0]])


m4_define([b4_symbol(23, type)],
[[block]])


m4_define([b4_symbol(12, type)],
[[token]])


m4_define([b4_symbol(2, type)],
[[]])


m4_define([b4_symbol(7, is_token)],
[[1]])


m4_define([b4_symbol(16, is_token)],
[[1]])


m4_define([b4_symbol(0, has_id)],
[[0]])


m4_define([b4_symbol(26, is_token)],
[[0]])


m4_define([b4_symbol(1, has_id)],
[[1]])


m4_define([b4_symbol(8, has_type)],
[[1]])


m4_define([b4_symbol(2, has_id)],
[[0]])


m4_define([b4_symbol(17, has_type)],
[[1]])


m4_define([b4_symbol(3, has_id)],
[[1]])


m4_define([b4_symbol(27, has_type)],
[[1]])


m4_define([b4_symbol(4, has_id)],
[[1]])


m4_define([b4_percent_define_syncline(api.namespace)],
[[]b4_syncline(6, [["Parser.y"]])[]])


m4_define([b4_symbol(5, has_id)],
[[1]])


m4_define([b4_symbol(6, has_id)],
[[1]])


m4_define([b4_symbol(7, has_id)],
[[1]])


m4_define([b4_merger_max],
[[0]])


m4_define([b4_symbol(8, has_id)],
[[1]])


m4_define([b4_symbol(8, user_number)],
[[263]])


m4_define([b4_symbol(9, has_id)],
[[1]])


m4_define([b4_symbol(17, user_number)],
[[272]])


m4_define([b4_symbol(27, user_number)],
[[-1]])


m4_define([b4_undef_token_number],
[[2]])


m4_define([b4_symbol(9, has_destructor)],
[[0]])


m4_define([b4_symbol(1, has_printer)],
[[0]])


m4_define([b4_symbol(18, has_destructor)],
[[0]])


m4_define([b4_symbol(9, id)],
[[TRETURN]])


m4_define([b4_symbol(10, has_printer)],
[[0]])


m4_define([b4_symbol(28, has_destructor)],
[[0]])


m4_define([b4_symbol(18, id)],
[[TASSIGN]])


m4_define([b4_percent_define_bison_variables(lr.type)],
[[]])


m4_define([b4_symbol(28, id)],
[[method_decl_args]])


m4_define([b4_symbol(20, has_printer)],
[[0]])


m4_define([b4_symbols_number],
[[34]])


m4_define([b4_symbol(30, has_printer)],
[[0]])


m4_define([b4_symbol(24, type)],
[[statement]])


m4_define([b4_symbol(13, type)],
[[token]])


m4_define([b4_symbol(3, type)],
[[integer]])


m4_define([b4_symbol(6, is_token)],
[[1]])


m4_define([b4_symbol(15, is_token)],
[[1]])


m4_define([b4_symbol(10, has_id)],
[[1]])


m4_define([b4_symbol(25, is_token)],
[[0]])


m4_define([b4_percent_define_syncline(lr.default-reduction)],
[[]])


m4_define([b4_symbol(11, has_id)],
[[1]])


m4_define([b4_symbol(7, has_type)],
[[1]])


m4_define([b4_symbol(12, has_id)],
[[1]])


m4_define([b4_symbol(16, has_type)],
[[1]])


m4_define([b4_symbol(13, has_id)],
[[1]])


m4_define([b4_symbol(26, has_type)],
[[1]])


m4_define([b4_prhs_max],
[[107]])


m4_define([b4_symbol(14, has_id)],
[[1]])


m4_define([b4_symbol(15, has_id)],
[[1]])


m4_define([b4_symbol(16, has_id)],
[[1]])


m4_define([b4_percent_define_bison_variables(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(17, has_id)],
[[1]])


m4_define([b4_symbol(18, has_id)],
[[1]])


m4_define([b4_spec_file_prefix],
[[]])


m4_define([b4_symbol(7, user_number)],
[[262]])


m4_define([b4_symbol(19, has_id)],
[[0]])


m4_define([b4_r1_max],
[[33]])


m4_define([b4_symbol(16, user_number)],
[[271]])


m4_define([b4_symbol(26, user_number)],
[[-1]])


m4_define([b4_required_version],
[[302]])


m4_define([b4_percent_define_loc(lr.type)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_percent_define(api.parser.class)],
[[ Parser ]])


m4_define([b4_toknum_min],
[[0]])


m4_define([b4_symbol(8, has_destructor)],
[[0]])


m4_define([b4_symbol(0, has_printer)],
[[0]])


m4_define([b4_symbol(17, has_destructor)],
[[0]])


m4_define([b4_symbol(8, id)],
[[TVAL]])


m4_define([b4_symbol(17, id)],
[[TQUOTE]])


m4_define([b4_symbol(27, has_destructor)],
[[0]])


m4_define([b4_symbol(27, id)],
[[method_decl]])


m4_define([b4_symbol(25, type)],
[[statement]])


m4_define([b4_symbol(14, type)],
[[token]])


m4_define([b4_spec_defines_file],
[[Parser.h]])


m4_define([b4_symbol(4, type)],
[[string]])


m4_define([b4_conflicting_rules_min],
[[0]])


m4_define([b4_r1],
[[     0,    19,    20,    20,    21,    21,    22,    22,    22,    22,
      22,    22,    23,    23,    24,    24,    25,    26,    26,    27,
      27,    28,    28,    28,    29,    29,    29,    29,    29,    30,
      31,    32,    33,    33,    33]])


m4_define([b4_symbol(5, is_token)],
[[1]])


m4_define([b4_pre_prologue],
[[]b4_syncline(13, [["Parser.y"]])[

    #include "AbstractSyntaxTree.h"
    Block* root_block;

    #define YY_EXCEPTIONS 0
    #define YYDEBUG 1
]])


m4_define([b4_symbol(20, has_id)],
[[1]])


m4_define([b4_symbol(14, is_token)],
[[1]])


m4_define([b4_r2],
[[     0,     2,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     3,     2,     4,     6,     6,     3,     5,     6,
       8,     0,     1,     3,     3,     4,     1,     1,     1,     1,
       1,     1,     0,     1,     3]])


m4_define([b4_percent_define_loc(lr.keep-unreachable-state)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_parse_param],
[[[[[Lexer &lexer]], [[lexer]]]]])


m4_define([b4_symbol(21, has_id)],
[[1]])


m4_define([b4_symbol(24, is_token)],
[[0]])


m4_define([b4_symbol(6, has_type)],
[[1]])


m4_define([b4_symbol(22, has_id)],
[[1]])


m4_define([b4_symbol(15, has_type)],
[[1]])


m4_define([b4_symbol(23, has_id)],
[[1]])


m4_define([b4_symbol(19, has_printer)],
[[0]])


m4_define([b4_check_min],
[[-1]])


m4_define([b4_symbol(29, has_printer)],
[[0]])


m4_define([b4_symbol(25, has_type)],
[[1]])


m4_define([b4_symbol(24, has_id)],
[[1]])


m4_define([b4_states_number],
[[61]])


m4_define([b4_symbol(25, has_id)],
[[1]])


m4_define([b4_symbol(26, has_id)],
[[1]])


m4_define([b4_symbol(27, has_id)],
[[1]])


m4_define([b4_symbol(28, has_id)],
[[1]])


m4_define([b4_symbol(29, has_id)],
[[1]])


m4_define([b4_r2_max],
[[8]])


m4_define([b4_symbol(6, user_number)],
[[261]])


m4_define([b4_symbol(15, user_number)],
[[270]])


m4_define([b4_symbol(25, user_number)],
[[-1]])


m4_define([b4_symbol(0, number)],
[[0]])


m4_define([b4_dprec_max],
[[0]])


m4_define([b4_symbol(1, number)],
[[1]])


m4_define([b4_defgoto],
[[    -1,     8,     9,    10,    52,    11,    12,    13,    14,    37,
      15,    23,    17,    18,    33]])


m4_define([b4_defact_max],
[[34]])


m4_define([b4_symbol(2, number)],
[[2]])


m4_define([b4_stos],
[[     0,     3,     4,     5,     6,     7,     8,     9,    20,    21,
      22,    24,    25,    26,    27,    29,    30,    31,    32,    30,
      30,    30,    29,    30,     0,    22,    10,    16,    18,    10,
      16,    16,    29,    33,    30,    29,    26,    28,    30,    30,
      30,    11,    14,    18,    11,    14,    18,    18,    29,    29,
      12,    16,    23,    26,    29,    29,    13,    21,    30,    13,
      23]])


m4_define([b4_symbol(3, number)],
[[3]])


m4_define([b4_symbol(4, number)],
[[4]])


m4_define([b4_final_state_number],
[[24]])


m4_define([b4_symbol(5, number)],
[[5]])


m4_define([b4_symbol(6, number)],
[[6]])


m4_define([b4_defgoto_min],
[[-1]])


m4_define([b4_symbol(7, number)],
[[7]])


m4_define([b4_symbol(8, number)],
[[8]])


m4_define([b4_symbol(7, has_destructor)],
[[0]])


m4_define([b4_symbol(9, number)],
[[9]])


m4_define([b4_symbol(7, id)],
[[TVAR]])


m4_define([b4_symbol(16, has_destructor)],
[[0]])


m4_define([b4_file_name],
[["Parser.y"]])


m4_define([b4_symbol(26, has_destructor)],
[[0]])


m4_define([b4_symbol(16, id)],
[[TCOLON]])


m4_define([b4_symbol(26, id)],
[[method_arg_decl]])


m4_define([b4_symbol(26, type)],
[[statement]])


m4_define([b4_symbol(15, type)],
[[token]])


m4_define([b4_immediate_min],
[[0]])


m4_define([b4_symbol(5, type)],
[[string]])


m4_define([b4_symbol(4, is_token)],
[[1]])


m4_define([b4_symbol(30, has_id)],
[[1]])


m4_define([b4_percent_define_syncline(lr.type)],
[[]])


m4_define([b4_symbol(31, has_id)],
[[1]])


m4_define([b4_symbol(13, is_token)],
[[1]])


m4_define([b4_symbol(23, is_token)],
[[0]])


m4_define([b4_symbol(32, has_id)],
[[1]])


m4_define([b4_symbol(5, has_type)],
[[1]])


m4_define([b4_symbol(33, is_token)],
[[0]])


m4_define([b4_symbol(33, has_id)],
[[1]])


m4_define([b4_symbol(9, has_printer)],
[[0]])


m4_define([b4_symbol(14, has_type)],
[[1]])


m4_define([b4_symbol(18, has_printer)],
[[0]])


m4_define([b4_symbol(24, has_type)],
[[1]])


m4_define([b4_symbol(28, has_printer)],
[[0]])


m4_define([b4_symbol(5, user_number)],
[[260]])


m4_define([b4_percent_define_how(api.namespace)],
[[2]])


m4_define([b4_symbol(14, user_number)],
[[269]])


m4_define([b4_symbol(24, user_number)],
[[-1]])


m4_define([b4_symbol(10, number)],
[[10]])


m4_define([b4_symbol(11, number)],
[[11]])


m4_define([b4_percent_define_syncline(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(12, number)],
[[12]])


m4_define([b4_symbol(13, number)],
[[13]])


m4_define([b4_rhs_min],
[[-1]])


m4_define([b4_symbol(14, number)],
[[14]])


m4_define([b4_symbol(15, number)],
[[15]])


m4_define([b4_symbol(16, number)],
[[16]])


m4_define([b4_symbol(17, number)],
[[17]])


m4_define([b4_symbol(18, number)],
[[18]])


m4_define([b4_pact_min],
[[-27]])


m4_define([b4_symbol(19, number)],
[[19]])


m4_define([b4_symbol(6, has_destructor)],
[[0]])


m4_define([b4_symbol(6, id)],
[[TFUN]])


m4_define([b4_symbol(15, has_destructor)],
[[0]])


m4_define([b4_percent_define_kind(api.namespace)],
[[code]])


m4_define([b4_symbol(25, has_destructor)],
[[0]])


m4_define([b4_symbol(15, id)],
[[TDOT]])


m4_define([b4_conflicting_rules],
[[     0]])


